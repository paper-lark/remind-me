function createCustomControls(){if(console.log(`> platform: ${process.platform}`),"darwin"!==process.platform){let e=document.createElement("div");e.className="controls-container",e.innerHTML='\n      <div class="controls" onclick="ipc.minimize()"><i class="minimize-icon"></i></div>\n      <div class="controls" onclick="ipc.expand()"><i class="expand-icon"></i></div>\n      <div class="controls" onclick="ipc.close()"><i class="close-icon"></i></div>\n    ',document.body.appendChild(e)}}function toText(e){let t=e.querySelector(".entry"),n=e.querySelectorAll(".sub-entry"),r="";function i(e){let t="";return t+=e.querySelector(".check").classList.contains("selected-icon")?"+":"-",t+=" "+e.querySelector(".content").textContent}if(r+=i(t)+"\n",n.forEach(e=>{r+="  "+i(e)+"\n"}),r+=e.getAttribute("data-tag"),void 0!=e.getAttribute("data-time")){let t=new Date(e.getAttribute("data-time")),n=t.getHours(),i=t.getMinutes(),o=t.getDate(),a=t.getMonth()+1,c=t.getFullYear();r+=` - ${a}/${o}/${c} ${n}:${i}`}return r}function trim(e){let t=/^\s*(\S.*\S)\s*$/g.exec(e);return void 0==t||1===t.length?"":t[1]}function toEntry(e){let t=e.split("\n").map(e=>trim(e)).filter(e=>""!==e);if(0===t.length)throw new Error("Reminder deleted");if(t.length<2)throw new Error("Invalid reminder format");let n=trim(t[0]),r=t.slice(1,t.length-1),i=t[t.length-1];if("+"!==n[0]&&"-"!==n[0])throw new Error("Tasks should start with +/-");let o={task:trim(n.slice(1)),completed:"+"===n[0],subtasks:[]};if(0===o.task.length)throw new Error("No description for a task was specified");let a=i.split("-");if(o.tag=trim(a[0]).toLowerCase(),0===o.tag.length)throw new Error("No tag specified");if(2===a.length){if(o.scheduled=!0,isNaN(Date.parse(a[1])))throw new Error("Invalid date. Format: mm/dd/yy hh:mm");o.date=new Date(a[1])}else o.scheduled=!1;return r.forEach(e=>{if("+"!==(e=trim(e))[0]&&"-"!==e[0])throw new Error("Tasks should start with +/-");let t={content:trim(e.slice(1)),completed:"+"===e[0]};if(0===t.content.length)throw new Error("No description for a subtask was specified");o.subtasks.push(t)}),o}const convert={toText:toText,toEntry:toEntry},path=require("path"),{ipcRenderer:ipcRenderer}=require("electron"),handlers=EventHanderFactory(),ipc=IPCHandlerFactory();let openedTab="ongoing",edited=void 0,colors=void 0,nextID=1,container=document.querySelector(".scrollable-container"),entries=document.getElementsByClassName("entry-container"),tabs=document.querySelectorAll(".tab"),filter=document.querySelector("#filter"),floating=document.querySelector(".floating"),current=document.querySelectorAll(`.entry-container[data-type='${openedTab}']`);function resolveColor(e){return colors[e]?colors[e]:"#00C853"}function createReminder(e){let t=render(e);return t.setAttribute("data-id",nextID++),t.addEventListener("dblclick",handlers.entryClick),t.addEventListener("keypress",handlers.entryInput),t.querySelectorAll(".check").forEach(e=>e.addEventListener("click",handlers.tick)),t}function createList(e){container.innerHTML="",e.forEach(e=>container.appendChild(createReminder(e))),openTab(openedTab)}function openTab(e){openedTab!==e&&(openedTab=e,tabs.forEach(t=>{t.getAttribute("data-type")!==e?t.classList.remove("active"):t.classList.add("active")})),current=Array.prototype.filter.call(entries,t=>t.getAttribute("data-type")===e),Array.prototype.forEach.call(entries,e=>e.style.display="none"),current.forEach(e=>e.style.display=""),handlers.filterInput()}function EventHanderFactory(){function e(e){if(void 0!=edited)try{let e=convert.toEntry(edited.innerHTML);e.color=resolveColor(e.tag),this.contentEditable="false",edited.parentNode.replaceChild(createReminder(e),edited),openTab(openedTab),notify({type:"success",message:"Reminder added"})}catch(e){console.error(`> failed to create an entry: ${e.message}`),notify({type:"error",message:e.message}),"Reminder deleted"===e.message&&(edited.parentNode.removeChild(edited),openTab(openedTab))}if(edited===this)edited=void 0;else{edited=this;let e=convert.toText(this);this.innerHTML=e,this.contentEditable="true"}}return{tabClick:function(e){openTab(this.getAttribute("data-type"))},entryClick:e,entryInput:function(t){13===t.keyCode&&t.shiftKey?(t.preventDefault(),document.execCommand("insertHTML",!1,"\n")):13===t.keyCode&&(t.preventDefault(),e.call(this,t))},filterInput:function(e){let t=filter.value.split(" ").filter(e=>""!==e).map(e=>e.toLowerCase());current.forEach(e=>{let n=e.getAttribute("data-tag");0===t.length||t.reduce((e,t)=>e||n.startsWith(t),!1)?e.style.display="flex":e.style.display="none"})},newReminder:function(t){let n=createReminder({task:"New note",scheduled:!1,subtasks:[],tag:"personal"});container.appendChild(n),e.call(n,void 0),openTab("unscheduled")},tick:function(e){let t=this.parentNode,n=t.parentNode;this.classList.toggle("unselected-icon"),this.classList.toggle("selected-icon"),t.classList.contains("entry")&&(this.classList.contains("selected-icon")?n.setAttribute("data-type","completed"):void 0==n.getAttribute("data-time")?n.setAttribute("data-type","unscheduled"):Date.now()>new Date(n.getAttribute("data-time"))?n.setAttribute("data-type","expired"):n.setAttribute("data-type","ongoing"),openTab(openedTab))}}}function IPCHandlerFactory(){function e(){let e=[];Array.prototype.forEach.call(entries,t=>{e.push(function(e){let t={},n=e.querySelector(".entry"),r=e.querySelectorAll(".sub-entry"),i=e.querySelector(".footer");return t.task=n.querySelector(".content").textContent,t.subtasks=[],r.forEach(e=>{let n={};n.completed=e.querySelector(".check").classList.contains("selected-icon"),n.content=e.querySelector(".content").textContent,t.subtasks.push(n)}),t.scheduled=void 0!=e.getAttribute("data-time"),t.scheduled&&(t.date=e.getAttribute("data-time")),t.completed="completed"===e.getAttribute("data-type"),t.tag=i.querySelector(".badge").innerHTML.toLowerCase(),t}(t))}),ipcRenderer.send("save",e)}return ipcRenderer.on("scroll",(e,t)=>{console.log(`> scrolling #${t} into view`);let n=void 0;if(Array.prototype.forEach.call(entries,e=>{e.getAttribute("data-id")===t&&(console.log("found!"),n=e)}),void 0==n)throw new Error("Attempt to scroll non-existant reminder into view");console.dir(n),openTab(n.getAttribute("data-type"))}),ipcRenderer.on("notify",(e,t)=>{notify(t)}),ipcRenderer.on("closing",(t,n)=>{e()}),{fetch:function(){ipcRenderer.on("reminders-response",(e,t)=>{console.log("> reminders-response received");let n=t.list;colors=t.colors,n.forEach(e=>{e.color=resolveColor(e.tag),e.scheduled&&(e.date=new Date(e.date))}),createList(n),notify({type:"success",message:"Reminders successfully loaded"})}),ipcRenderer.send("reminders-request")},save:e,remind:function(e){let t=e.querySelector(".entry .content");if(void 0==t)throw new Error("Scheduled reminder is being edited");let n=t.textContent,r=e.getAttribute("data-id");ipcRenderer.send("remind",{content:n,id:r})},minimize:function(){ipcRenderer.send("minimize-window")},close:function(){ipcRenderer.send("close-window")},expand:function(){ipcRenderer.send("expand-window")}}}function checkRoutine(){window.setInterval(()=>{console.log("> check...");let e=new Date(Date.now()),t=new Date(Date.now()-3e4);Array.prototype.forEach.call(entries,n=>{if("ongoing"===n.getAttribute("data-type")){let r=new Date(n.getAttribute("data-time"));if(r>t&&r<=e){console.log("> caught!");try{ipc.remind(n),n.setAttribute("data-type","expired")}catch(e){notify({type:"warning",message:e.message})}}}}),openTab(openedTab)},3e4)}function init(){createCustomControls(),ipc.fetch(),checkRoutine()}tabs.forEach(e=>e.addEventListener("click",handlers.tabClick)),filter.addEventListener("input",handlers.filterInput),floating.addEventListener("click",handlers.newReminder),init();let element=document.querySelector(".notification");function notify(e){element.className=`notification ${e.type}`,element.innerHTML=e.message,element.style.transform="translateY(0%)",window.setTimeout(()=>{element.style.transform=""},2e3)}function capitalize(e){return e.slice(0,1).toUpperCase()+e.slice(1)}function generateTime(e){let t=e.getHours(),n=e.getMinutes(),r=e.getDate(),i=e.getMonth(),o=e.getFullYear();function a(e){return e<10?`0${e}`:`${e}`}let c=new Date(Date.now());return c.getDate()===r&&c.getMonth()===i&&c.getFullYear()===o?`due to ${a(t)}:${a(n)}`:`due to ${a(r)}/${a(i+1)}/${o}`}function render(e){console.dir(e);let t=document.createElement("div");t.className="entry-container",e.completed?t.setAttribute("data-type","completed"):e.scheduled?e.date<=Date.now()?t.setAttribute("data-type","expired"):t.setAttribute("data-type","ongoing"):t.setAttribute("data-type","unscheduled"),t.setAttribute("data-tag",e.tag),e.scheduled&&t.setAttribute("data-time",e.date.toString());let n=`<div class="entry">\n               <i class="check ${e.completed?"selected-icon":"unselected-icon"}"></i>\n               <span class="content">${e.task}</span>\n             </div>`;return e.subtasks.forEach(e=>{n+=`<div class="sub-entry">\n               <i class="check ${e.completed?"selected-icon":"unselected-icon"}"></i>\n               <span class="content">${e.content}</span>\n             </div>`}),e.scheduled?n+=`<div class="footer">\n               <div class="badge" style="background: ${e.color}">${capitalize(e.tag)}</div>\n               <div class="time">${generateTime(e.date)}</div>\n             </div>`:n+=`<div class="footer">\n               <div class="badge" style="background: ${e.color}">${capitalize(e.tag)}</div>\n             </div>`,t.innerHTML=n,t}